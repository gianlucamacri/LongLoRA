  0%|                                                                                                                                                               | 0/840 [00:00<?, ?it/s]/home/gmacri/miniconda3/lib/python3.11/site-packages/torch/utils/checkpoint.py:429: UserWarning: torch.utils.checkpoint: please pass in use_reentrant=True or use_reentrant=False explicitly. The default value of use_reentrant will be updated to be False in the future. To maintain current behavior, pass use_reentrant=True. It is recommended that you use use_reentrant=False. Refer to docs for more details on the differences between the two variants.
  warnings.warn(
/home/gmacri/miniconda3/lib/python3.11/site-packages/deepspeed/runtime/zero/stage_1_and_2.py:1879: UserWarning: The torch.cuda.*DtypeTensor constructors are no longer recommended. It's best to use methods such as torch.tensor(data, dtype=*, device='cuda') to create tensors. (Triggered internally at ../torch/csrc/tensor/python_tensor.cpp:83.)
  overflow_gpu = get_accelerator().ByteTensor([overflow])
  0%|▏                                                                                                                                                    | 1/840 [00:19<4:34:27, 19.63s/it]
{'loss': 4.5214, 'learning_rate': 2e-05, 'epoch': 0.04}

  0%|▎                                                                                                                                                    | 2/840 [00:38<4:30:34, 19.37s/it]


  0%|▋                                                                                                                                                    | 4/840 [01:11<4:00:23, 17.25s/it]

  1%|▉                                                                                                                                                    | 5/840 [01:31<4:14:18, 18.27s/it]

  1%|█                                                                                                                                                    | 6/840 [01:49<4:12:43, 18.18s/it]

  1%|█▏                                                                                                                                                   | 7/840 [02:05<4:03:32, 17.54s/it]

  1%|▏                      | 8/840 [02:23<4:04:27, 17.63s/it]
{'loss': 4.8467, 'learning_rate': 2e-05, 'epoch': 0.28}

  1%|█▌                                                                                                                                                   | 9/840 [02:41<4:05:06, 17.70s/it]

  1%|█▊                                                                                                                                                  | 10/840 [02:57<3:57:25, 17.16s/it]Traceback (most recent call last):
  File "/home/gmacri/tirocinioCameraSummarization/LongLora_fork/LongLoRA/supervised-fine-tune-qlora.py", line 491, in <module>
    train()
  File "/home/gmacri/tirocinioCameraSummarization/LongLora_fork/LongLoRA/supervised-fine-tune-qlora.py", line 484, in train
    trainer.train()
  File "/home/gmacri/miniconda3/lib/python3.11/site-packages/transformers/trainer.py", line 1591, in train
    return inner_training_loop(
           ^^^^^^^^^^^^^^^^^^^^
  File "/home/gmacri/miniconda3/lib/python3.11/site-packages/transformers/trainer.py", line 1892, in _inner_training_loop
    tr_loss_step = self.training_step(model, inputs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/gmacri/miniconda3/lib/python3.11/site-packages/transformers/trainer.py", line 2787, in training_step
    self.accelerator.backward(loss)
  File "/home/gmacri/miniconda3/lib/python3.11/site-packages/accelerate/accelerator.py", line 1983, in backward
    self.deepspeed_engine_wrapped.backward(loss, **kwargs)
  File "/home/gmacri/miniconda3/lib/python3.11/site-packages/accelerate/utils/deepspeed.py", line 167, in backward
    self.engine.backward(loss, **kwargs)
  File "/home/gmacri/miniconda3/lib/python3.11/site-packages/deepspeed/utils/nvtx.py", line 15, in wrapped_fn
    ret_val = func(*args, **kwargs)
              ^^^^^^^^^^^^^^^^^^^^^
  File "/home/gmacri/miniconda3/lib/python3.11/site-packages/deepspeed/runtime/engine.py", line 1929, in backward
    self.optimizer.backward(loss, retain_graph=retain_graph)
  File "/home/gmacri/miniconda3/lib/python3.11/site-packages/deepspeed/runtime/zero/stage_1_and_2.py", line 1951, in backward
    self.loss_scaler.backward(loss.float(), retain_graph=retain_graph)
  File "/home/gmacri/miniconda3/lib/python3.11/site-packages/deepspeed/runtime/fp16/loss_scaler.py", line 63, in backward
    scaled_loss.backward(retain_graph=retain_graph)
  File "/home/gmacri/miniconda3/lib/python3.11/site-packages/torch/_tensor.py", line 492, in backward
    torch.autograd.backward(
  File "/home/gmacri/miniconda3/lib/python3.11/site-packages/torch/autograd/__init__.py", line 251, in backward
    Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
KeyboardInterrupt